#!/usr/bin/perl

# Functions
sub replace {
    my $file = shift;
    my $old = shift;
    my $new = shift;
    #print "sed -i \"s/$old/$new/\" $file\n";
    print `sed -i "s/$old/$new/" $file`;
}

# Execution starts here
my $name = $ARGV[0];
if (!$name || $name eq '') {
    print "name: $name\n";
    print "Usage:  ./create-extension EXTENSION_NAME\n\n";
    print "Example: ./create-extension AlarmClock\n";
    exit ();
}

my $dir = "src/$name";

if (-d $dir || -e dir) {
    print "$dir already exists; remove it or choose a new name\n";
    exit ();
}

# TODO ensure the working copy of git is clean

print "Making directory $dir\n";
print `mkdir -p $dir`;

print "Copying build/extension-template/* to $dir\n";
print `cp -R build/extension-template/* $dir/`;

# Rename files appropriately
print `mv $dir/Banshee.Template/ $dir/Banshee.$name`;
print `mv $dir/Template.addin.xml $dir/$name.addin.xml`;
print `mv $dir/Template.csproj $dir/$name.csproj`;

# Replace the GUID
my $guid = `mono build/gen-guid.exe`; chomp($guid); $guid = uc($guid);
replace ("$dir/$name.csproj", "TEMPLATE-GUID", $guid);

# Replace the extension name
replace ("$dir/Makefile.am",     "EXTENSION-NAME", $name);
replace ("$dir/$name.addin.xml", "EXTENSION-NAME", $name);
replace ("$dir/$name.csproj",    "EXTENSION-NAME", $name);

# Add to configure.ac
replace ("configure.ac", 'src\\/Makefile', 'src\\/Makefile\nsrc\\/' . $name. '\\/Makefile');
replace ("configure.ac", "Extensions:", 'Extensions:\n    ' . $name . ':' . (' ' x (18 - length($name))) . "yes");

# Add to src/Makefile.am
my $subdirs = "SUBDIRS = \\\\\\";
replace ("src/Makefile.am", $subdirs, $subdirs . ' \n    ' . $name . ' \\\\\\');
replace ("src/Makefile.am", " \$", "");

# Add everything to git, ready to commit
print `git add $dir/`;
print `git add configure.ac src/Makefile.am`;
print `git commit -m "[$name] Initial skeleton"`;

# run autogen.sh
print "Running ./autogen.sh to refresh Makefiles\n";
`./autogen.sh` || die "Failed running ./autogen.sh - run it yourself to get the error";

print "Your extension has been committed to git, and is ready to customize!\n\n";

print "Its files are in $dir\n";
print "It is available in MonoDevelop within the Extensions.sln\n";

print "\nYou can undo the creation of this extension, and revert to the last commit with\n";
print "git reset --hard origin/master\n";
